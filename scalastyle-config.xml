<?xml version="1.0" encoding="UTF-8"?>
<!--
This file is divided into 3 sections:
 (1) rules that we enforce.
 (2) rules that we would like to enforce, but haven't cleaned up the codebase to turn on yet
     (or we need to make the scalastyle rule more configurable).
 (3) rules that we don't want to enforce.
-->
<scalastyle>
  <name>Scalastyle standard configuration</name>

  <!-- ================================================================================ -->
  <!--                               rules we enforce                                   -->
  <!-- ================================================================================ -->

  <check level="warning" class="org.scalastyle.file.FileTabChecker" enabled="true" />
  <check level="warning" class="org.scalastyle.file.FileLengthChecker" enabled="true">
    <parameters>
      <parameter name="maxFileLength"><![CDATA[800]]></parameter>
    </parameters>
  </check>

  <check level="warning" class="org.scalastyle.file.WhitespaceEndOfLineChecker" enabled="true" />
  <check level="warning" class="org.scalastyle.file.FileLineLengthChecker" enabled="true">
    <parameters>
      <parameter name="maxLineLength"><![CDATA[160]]></parameter>
      <parameter name="tabSize"><![CDATA[2]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.SpacesAfterPlusChecker" enabled="true" />
  <check level="warning" class="org.scalastyle.scalariform.SpacesBeforePlusChecker" enabled="true" />
  <check level="warning" class="org.scalastyle.scalariform.EnsureSingleSpaceAfterTokenChecker" enabled="true">
    <parameters>
      <parameter name="tokens">FOR</parameter>
      <parameter name="tokens">IF</parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.ClassNamesChecker" enabled="true">
    <parameters>
      <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.ObjectNamesChecker" enabled="true">
    <parameters>
      <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.PackageObjectNamesChecker" enabled="true">
    <parameters>
      <parameter name="regex"><![CDATA[^[a-z][A-Za-z]*$]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.EqualsHashCodeChecker" enabled="true" />
  <check level="warning" class="org.scalastyle.scalariform.IllegalImportsChecker" enabled="true">
    <parameters>
      <parameter name="illegalImports"><![CDATA[sun._,java.awt._]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.ParameterNumberChecker" enabled="true">
    <parameters>
      <parameter name="maxParameters"><![CDATA[8]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.MagicNumberChecker" enabled="true">
    <parameters>
      <parameter name="ignore"><![CDATA[-1,0,1,2,3]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.NoCloneChecker" enabled="true" />
  <check level="warning" class="org.scalastyle.scalariform.NoFinalizeChecker" enabled="true" />
  <check level="warning" class="org.scalastyle.scalariform.CovariantEqualsChecker" enabled="true" />
  <check level="warning" class="org.scalastyle.scalariform.StructuralTypeChecker" enabled="true" />
  <check level="warning" class="org.scalastyle.file.RegexChecker" enabled="true">
    <parameters>
      <parameter name="regex"><![CDATA[println]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.NumberOfTypesChecker" enabled="true">
    <parameters>
      <parameter name="maxTypes"><![CDATA[30]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.UppercaseLChecker" enabled="true" />
  <check level="warning" class="org.scalastyle.scalariform.IfBraceChecker" enabled="true">
    <parameters>
      <parameter name="singleLineAllowed"><![CDATA[true]]></parameter>
      <parameter name="doubleLineAllowed"><![CDATA[false]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.MethodNamesChecker" enabled="true">
    <parameters>
      <parameter name="regex"><![CDATA[^[a-z][A-Za-z0-9]*$]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.NumberOfMethodsInTypeChecker" enabled="true">
    <parameters>
      <parameter name="maxMethods"><![CDATA[30]]></parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.scalariform.PublicMethodsHaveTypeChecker" enabled="true">
    <parameters>
      <parameter name="ignoreOverride">true</parameter>
    </parameters>
  </check>
  <check level="warning" class="org.scalastyle.file.NewLineAtEofChecker" enabled="true" />
  <check level="warning" class="org.scalastyle.scalariform.BlockImportChecker" enabled="true" />
  <check level="warning" class="org.scalastyle.scalariform.ImportGroupingChecker" enabled="true" />
  <check level="warning" class="org.scalastyle.scalariform.UnderscoreImportChecker" enabled="true" />

  <!-- ================================================================================ -->
  <!--       rules we'd like to enforce, but haven't cleaned up the codebase yet        -->
  <!-- ================================================================================ -->

  <!-- We cannot turn the following two on, because it'd fail a lot of string interpolation use cases. -->
  <!-- Ideally the following two rules should be configurable to rule out string interpolation. -->
  <check level="warning" class="org.scalastyle.scalariform.NoWhitespaceBeforeLeftBracketChecker" enabled="false"></check>
  <check level="warning" class="org.scalastyle.scalariform.NoWhitespaceAfterLeftBracketChecker" enabled="false"></check>

  <!-- ================================================================================ -->
  <!--                               rules we don't want                                -->
  <!-- ================================================================================ -->

  <!-- We want the opposite of this: NewLineAtEofChecker -->
  <check level="warning" class="org.scalastyle.file.NoNewLineAtEofChecker" enabled="false" />

  <!-- This one complains about all kinds of random things. Disable. -->
  <check level="warning" class="org.scalastyle.scalariform.SimplifyBooleanExpressionChecker" enabled="false"></check>

  <!-- We use return quite a bit for control flows and guards -->
  <check level="warning" class="org.scalastyle.scalariform.ReturnChecker" enabled="false"></check>

  <!-- We use null a lot in low level code and to interface with 3rd party code -->
  <check level="warning" class="org.scalastyle.scalariform.NullChecker" enabled="false"></check>

  <!-- Doesn't seem super big deal here ... -->
  <check level="warning" class="org.scalastyle.scalariform.MethodLengthChecker" enabled="false">
    <parameters><parameter name="maxLength">50</parameter></parameters>
  </check>

  <!-- Cannot avoid it using Spark -->
  <check level="warning" class="org.scalastyle.scalariform.CyclomaticComplexityChecker" enabled="false">
    <parameters>
      <parameter name="maximum"><![CDATA[10]]></parameter>
    </parameters>
  </check>

</scalastyle>